---
- name: Create volumes for the hosts instances
  hosts: localhost
  gather_facts: no
  tasks:
  
    - name: Create EFS and establish connection with the relative hosts
      block:
      
        - name: Create security group for the EFS
          amazon.aws.ec2_security_group:
            name: "efs-sg"
            description: "Security group for the Elastic File System"
            vpc_id: vpc-0a939c19442ae9cf8
            region: "{{ lookup('env','AWS_DEFAULT_REGION') }}"
            rules:
            
              - proto: tcp
                from_port: 2049
                to_port: 2049
                group_id: "{{vue_sg_id}}"
              
              - proto: tcp
                from_port: 2049
                to_port: 2049
                group_id: "{{ Django_sg.group_id }}"
                
            state: present   
          register: efs_sg
      
        - name: EFS for static data
          community.aws.efs:
            state: present
            name: static-data
            tags:
              purpose: static-data-storage
            targets:
              - subnet_id: subnet-045e46c91af1579fc
                security_groups: 
                  - "{{vue_sg_id}}"
                  - "{{nginx_sg_id}}"
          register: static_data_efs
                    
      when: not dev_environment
        
    - name: Create EBS for the app 's mysql db
      block:
      
        - name: Check if MySQL volume already exists
          amazon.aws.ec2_vol_info:
            region: "{{ lookup('env','AWS_DEFAULT_REGION') }}"
            filters:
              "tag:Name": "{{ 'dev_db_data' if dev_environment | bool else 'mysql-data' }}"
          register: mysql_data_ebs_info
      
        - name: EBS for MySQL data files
          amazon.aws.ec2_vol:
            region: "{{ lookup('env','AWS_DEFAULT_REGION') }}"
            aws_zone: 'us-east-1d'
            volume_type: gp3
            volume_size: 20
            state: present
            tags:
              Name: "{{ 'dev_db_data' if dev_environment | bool else 'mysql-data' }}"
          when: mysql_data_ebs_info.volumes | length == 0
          register: mysql_data_ebs
      
    - name: Set EFS and EBS as facts
      set_fact:
        static_data_efs: "{{ static_data_efs | default('') }}"
        mysql_data_ebs:  >-
            { mysql_data_ebs.volumes[0].volume_id 
              if mysql_data_ebs.changed
              else mysql_data_ebs_info.volumes[0].volume_id }}
        
          