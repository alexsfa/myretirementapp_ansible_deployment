---
- name: Deploy the Django API component of the app
  hosts: django_servers
  vars_files:
  - ../vars/backend_variables.yml
  - ../vars/db_credentials.yml
  tasks:
  
  - name: Clone git repo of Django API backend
    block:

      - name: Write decrypted private key to temporary file
        copy:
          content: "{{ github_backend_priv_key }}"
          dest: /tmp/github_backend_key
          mode: '0600'

      - name: Clone private repo
        git:
          repo: 'git@github.com:alexsfa/myretirement_api.git'
          dest: /home/ubuntu/myretirement_api
          key_file: /tmp/github_backend_key
          version: main
          force: yes
          accept_hostkey: yes

    always:
      - name: Remove temporary private key
        file:
          path: /tmp/github_backend_key
          state: absent

  - name: Install Python packages from requirements.txt
    become: yes
    ansible.builtin.pip:
      requirements: /home/ubuntu/myretirement_api/requirements.txt
      virtualenv: /py            
      virtualenv_python: python3  
    
  - name: Install Python packages from requirements.dev.txt
    become: yes
    ansible.builtin.pip:
      requirements: /home/ubuntu/myretirement_api/requirements.dev.txt
      virtualenv: /py            
      virtualenv_python: python3
    when: hostvars['localhost'].dev_environment | bool
          
  - name: Create .env file
    ansible.builtin.template:
      src: ../templates/backend_env_vars.j2
      dest: "{{ hostvars['localhost'].dev_environment | ternary('/home/ubuntu/myretirement_api/app/.env.dev',
                                                          '/home/ubuntu/myretirement_api/app/.env.prod') }}"
      mode: '0600'
                                                          
  - name: Add mailhog host's ip and port in the .env file
    ansible.builtin.blockinfile:
      path: "{{ hostvars['localhost'].dev_environment | ternary('/home/ubuntu/myretirement_api/app/.env.dev',
                                                          '/home/ubuntu/myretirement_api/app/.env.prod') }}"
      block: |
        DB_HOST={{ hostvars['localhost'].mysql_host_private_ip }}
        EMAIL_HOST={{ hostvars['localhost'].mailhog_host_private_ip }}
        EMAIL_PORT=1025
        ALLOWED_HOSTS={{ hostvars['localhost'].vue_host_private_ip }},{{ hostvars['localhost'].django_host_private_ip }},{{ hostvars['localhost'].django_host_public_ip }},localhost,127.0.0.1
        DEBUG=1
        CORS_ALLOWED_ORIGINS={{ hostvars['localhost'].vue_host_public_ip }}
        
      
          
  - name: Run Django wait_for_db command
    ansible.builtin.command:
      cmd: /py/bin/python manage.py wait_for_db
      chdir: /home/ubuntu/myretirement_api/app
      
  - name: Load migrations in the database
    ansible.builtin.command:
      cmd: /py/bin/python manage.py migrate
      chdir: /home/ubuntu/myretirement_api/app
      
  - name: Ensure Django superuser exists
    copy:
      dest: /tmp/create_superuser.py
      content: |
        import os
        import sys
        import django
        
        sys.path.append('.')
        
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myretirementapi.settings')
        
        django.setup()
        from django.contrib.auth import get_user_model
        
        email = os.getenv('DJANGO_SUPERUSER_EMAIL')
        password = os.getenv('DJANGO_SUPERUSER_PASSWORD')
        User = get_user_model()
        if not User.objects.filter(email=email).exists(): 
            User.objects.create_superuser(email=email, password=password)
  
  - name: Create Django superuser with script
    command: /py/bin/python /tmp/create_superuser.py
    args:
      chdir: /home/ubuntu/myretirement_api/app
      
  - name: Check if Django API server is running
    ansible.builtin.shell: "lsof -i :8000"
    register: django_port
    ignore_errors: yes
      
  - name: Run the Django API server
    command: /py/bin/python manage.py runserver 0.0.0.0:8000
    args:
      chdir: /home/ubuntu/myretirement_api/app
    async: 3600   
    poll: 0
    when: django_port.rc != 0
    
          
    