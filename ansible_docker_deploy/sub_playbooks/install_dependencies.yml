---
    - name: Update apt
      apt:
        update_cache: yes

    - name: Git installation
      block:
        - name: Install Git
          ansible.builtin.apt:
            name: git
            state: present
            update_cache: yes

        - name: Verify Git version
          ansible.builtin.command: git --version
          changed_when: false

    - name: Docker installation
      block:

        - name: Add Docker GPG key (via apt_key)
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker GPG key and APT repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
            state: present
            filename: docker
            update_cache: yes


        - name: Install Docker
          apt:
            name: 
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
            state: present
            update_cache: yes

        - name: Ensure docker is running
          service:
            name: docker
            state: started
            enabled: true

        - name: Add ubuntu to docker group
          ansible.builtin.user:
            name: ubuntu
            groups: docker
            append: yes
          notify: Reconnect after adding user to docker group

    - name: Install Docker Compose V2 plugin
      block:

        - name: Install Docker Compose V2 plugin
          ansible.builtin.apt:
            name: docker-compose-plugin
            state: present

        - name: Verify Docker Compose V2 installed
          ansible.builtin.command: docker compose version
          register: compose_version
          changed_when: false
          failed_when: compose_version.rc != 0
    
    - name: Save the ssl certificate into the Docker environment
      block:
    
        - name: Create a Docker volume for the ssl certificate
          docker_volume:
            name: ssl_certificate
            driver: local
            state: present
          
          # synchronize module instead of copy helps preserve the symlink of the directory
          # certbot needs the contents of /etc/letsencrypt/live/<domain>/*.pem to know the current version of the cert
        - name: Copy files directly to Docker volume
          synchronize:
            src: ../ssl_certificate/./
            dest: /var/lib/docker/volumes/ssl_certificate/_data/
            recursive: yes
            rsync_opts:
              - "-l" # preserve symlinks
              
        - name: Recreate Let's Encrypt symlinks
          file:
            src: "../../archive/myretirement.click/{{ item.archive }}"
            dest: "/var/lib/docker/volumes/ssl_certificate/_data/live/myretirement.click/{{ item.live }}"
            state: link
          loop:
            - { archive: "cert1.pem", live: "cert.pem" }
            - { archive: "chain1.pem", live: "chain.pem" }
            - { archive: "fullchain1.pem", live: "fullchain.pem" }
            - { archive: "privkey1.pem", live: "privkey.pem" }
          
        - name: Ensure correct ownership of Docker volume files
          file:
            path: /var/lib/docker/volumes/ssl_certificate/_data/
            owner: root
            group: root
            recurse: yes

        - name: Fix private key permissions
          file:
            path: /var/lib/docker/volumes/ssl_certificate/_data/live/myretirement.click/privkey.pem
            mode: '0600'
            
      when: not dev_environment
    
        
    


